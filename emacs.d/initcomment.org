
(defun efs/exwm-update-class()
  (exwm-workspace-rename-buffer exwm-class-name))

;(defvar exwm-workspace-previous-index nil "The previous active workspace index.")
;
;(defun exwm-workspace--current-to-previous-index (_x)
;  (setq exwm-workspace-previous-index exwm-workspace-current-index))
;
;(advice-add 'exwm-workspace-switch :before #'exwm-workspace--current-to-previous-index)
;
;(defun exwm-workspace-switch-to-previous ()
;  (interactive)
;  "Switch to the previous active workspace." 
;  (let ((index exwm-workspace-previous-index))
;    (exwm-workspace-switch index)))

;(use-package exwm
;  :config
;  ;; default num of workspace
;  (setq exwm-workspace-number 5)
;
;  (add-hook 'exwm-update-class-hook #'efs/exwm-update-class)
;  (setq exwm-input-prefix-keys
;        '(?\C-x
;          ?\C-w
;          ?\C-h
;          ?\C-u
;          ?\M-x
;          ?\M-`
;          ?\M-\&
;          ?\M-\;
;          ?\C-\M-j
;          ?\C-\
;	  ?\M-h
;          ))
;  (define-key exwm-mode-map [?\C-q] 'exwm-input-send-next-key)
;
;  (setq exwm-input-global-keys
;        `(
;          ([?\s-r] . exwm-reset)
;          ([?\s-o] . counsel-switch-buffer)
;          ([s-left] . windmove-left)
;          ([s-right] . windmove-right)
;          ([s-up] . windmove-up)
;          ([s-down] . windmove-douwn)
;          ([?\s-h] . windmove-left)
;          ([?\s-l] . windmove-right)
;          ([?\s-k] . windmove-up)
;          ([?\s-j] . windmove-douwn)
;          ([?\s-v] . (shell-command "sh ~/private/dotfiles/polybar/polybar/hack/scripts/powermenu.sh"))
;          ([?\s-&] . (lambda (command)(interactive (list (read-shell-command "$ ")))
;                       (start-process-shell-command command nil command)))
;          ([?\s-a] . counsel-linux-app)
;
;          ([?\s-w] . exwm-workspace-switch)
;          ([?\s-\+] . (lambda () (interactive) (exwm-workspace-switch-create 0)))
;          ([?\s-\[] . (lambda () (interactive) (exwm-workspace-switch-create 1)))
;          ([?\s-\{] . (lambda () (interactive) (exwm-workspace-switch-create 2)))
;          ([?\s-\(] . (lambda () (interactive) (exwm-workspace-switch-create 3)))
;          ([?\s-\&] . (lambda () (interactive) (exwm-workspace-switch-create 4)))
;          ([?\s-\=] . (lambda () (interactive) (exwm-workspace-switch-create 5)))
;          ([?\s-\)] . (lambda () (interactive) (exwm-workspace-switch-create 6)))
;          ([?\s-\}] . (lambda () (interactive) (exwm-workspace-switch-create 7)))
;          ([?\s-\]] . (lambda () (interactive) (exwm-workspace-switch-create 8)))
;          ([?\s-\*] . (lambda () (interactive) (exwm-workspace-switch-create 9)))))
;
;(require 'exwm-randr)
;(setq exwm-randr-workspace-output-plist '(1 "HDMI-1"))
;(add-hook 'exwm-randr-screen-change-hook
;          (lambda ()
;            (start-process-shell-command
;             "xrandr" nil "xrandr --output $EXTERNALSCREEN --left-of $LAPTOPSCREEN --auto")))
;(exwm-randr-enable)
;    ;; 's-N': Switch to certain workspace with Super (Win) plus a number key (0 - 9)
;  (exwm-enable))
